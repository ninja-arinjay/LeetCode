LeetCode - Palindrome LinkedList


class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode mid = middle(head);
        System.out.println(mid.val);
        ListNode reverseHead = reverse(mid);
        mid.next = null;
        ListNode start=head;
        ListNode last = reverseHead;
        while(last!=null){
            if(last.val != start.val){
                return false;
            }
            last = last.next;
            start = start.next;
        }
        return true;
    }
    public ListNode middle(ListNode head){
        ListNode fast = head;
        ListNode slow = head;
        while(fast!=null && fast.next!=null){
            fast= fast.next.next;
            slow = slow.next;
        }
        return slow;
    }
    public ListNode reverse(ListNode head){
        ListNode curr = head;
        ListNode prev = null;
        while(curr!=null){
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }
}